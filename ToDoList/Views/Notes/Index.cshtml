
@{
    ViewBag.Title = "Index";
    DateTime oggi = DateTime.Now;

}

<head>

</head>


<div class="row">

    <div class="intro_div col-md-12">
        <h2 class="intro flex_container align_center justify_content">
            NOTELIFE

            <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="currentColor" class="bi bi-list-task" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M2 2.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5zM3 3H2v1h1z" />
                <path d="M5 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M5.5 7a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1zm0 4a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1z" />
                <path fill-rule="evenodd" d="M1.5 7a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5zM2 7h1v1H2zm0 3.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5zm1 .5H2v1h1z" />
            </svg>

        </h2>

    </div>




    <div class="col-md-12">
        <h2>Note</h2>
        <div class="flex_container" style="gap:10px">
            <i class="glyphicon glyphicon-search flex_container align_center justify_content icon_search_input"></i>
            <input type="text" name="name" class="inpt_search  " value="" placeholder="cerca note" />

        </div>

        <div id="Notes" class="flex_container flex_wrap flex_gap">


        </div>

    </div>




    <nav class="navbar flex_container align_center justify_content col-md-12">

        <ul class="list-nav flex_container align_center justify_content">



            <li id="newNotes" class="flex_container align_center justify_content icon_colum">
                <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-file-plus" viewBox="0 0 16 16">
                    <path d="M8.5 6a.5.5 0 0 0-1 0v1.5H6a.5.5 0 0 0 0 1h1.5V10a.5.5 0 0 0 1 0V8.5H10a.5.5 0 0 0 0-1H8.5z" />
                    <path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1" />
                </svg> Note
            </li>

            <li>
                <a class="flex_container align_center justify_content icon_colum" href="@Url.Action("Profile", "Account")">
                    <svg style="color:black;" xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-person-workspace" viewBox="0 0 16 16">
                        <path d="M4 16s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1zm4-5.95a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5" />
                        <path d="M2 1a2 2 0 0 0-2 2v9.5A1.5 1.5 0 0 0 1.5 14h.653a5.4 5.4 0 0 1 1.066-2H1V3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v9h-2.219c.554.654.89 1.373 1.066 2h.653a1.5 1.5 0 0 0 1.5-1.5V3a2 2 0 0 0-2-2z" />
                    </svg> Account
                </a>

            </li>


        </ul>

    </nav>

</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
<script src="~/Scripts/jquery-confirm.js"></script>
<script href="~/Content/jquery-confirm.css"></script>

<script>

    $(document).ready(function () {


        var today = new Date();
        var day = today.getDate();
        var month = (today.getMonth() + 1).toString().padStart(2, '0');
        var year = today.getFullYear();
        var hh = today.getHours();
        var mm = today.getMinutes();
        var ss = today.getSeconds();

        var currentDate = year + '-' + month + '-' + day;

        $.ajax({
            type: "GET",
            url: '@Url.Action("NotesList", "Notes")',
            success: function (response) {
                if (response.length != 0) {

                    $.each(response, function (i, elemento) {

                        $.each(elemento, function (j, e) {
                            console.log(e)
                            //creo gli oggetti

                            var box_card = $('<div><div/>', {
                                style: 'width:100%; heigth:500px',
                            });

                            var id = e.Notes_id;

                            var titolo = $('<p>', {
                                text: e.title,
                                target: '_blank',
                                style: 'color:black',
                            });


                            var descrizione = $('<p>', {
                                text: e.DescriptionNotes,
                                target: '_blank',
                                style: 'display:flex',
                            });

                            var categoria = $('<p>', {
                                text: e.category,
                                target: '_blank',
                                style: 'color:black',
                            });

                            var date001 = e.DateNotes;
                            // Estrai il timestamp dai millisecondi
                            var timestamp = parseInt(date001.replace('/Date(', '').replace(')/', ''), 10);
                            // Crea un oggetto Date
                            var date = new Date(timestamp);
                            // Formatta la data nel formato dd/mm/yyyy
                            var formattedDate = date.toLocaleDateString('it-IT');

                            //aggiungo
                            box_card.addClass("cardNotes")
                            box_card.append(titolo);
                            box_card.append(formattedDate);
                            box_card.append(descrizione);
                            box_card.append(categoria);

                            $("#Notes").append(box_card);

                        })


                    });
                } else {
                    console.log("vuoto");
                }
            }
        });

    });

</script>



<script>

            $('#newNotes').on('click', function () {

            $.confirm({
                title: 'Nuova Nota',
                content: '' +
                    '<form action="" class="formName">' +
                    '<div class="form-group" style="display:flex; gap:10px; flex-direction:column ">' +

                    '<input type="text" placeholder="Nome" class="Title form-control" required />' +
                    '<input type="datetime-local" class="DateNotes form-control" required />' +

                    '<input type="text" placeholder="Descrizione" class="DescriptionNotes form-control" required />' +

                    '<div class="flex_container icon_colum">' +
                    '<div class="flex_container gap_block  " >' +

                    ' <label for="dog-names">Categoria</label> ' +
                    ' <select name="dog-names" id="category"> ' +
                    ' <option value="1"> 1</option> ' +
                    ' <option value="2">2 </option> ' +
                    ' <option value="3">3</option> ' +
                    '<option value="4">4</option> ' +
                    '</select>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</form>',

                buttons: {
                    formSubmit: {
                        text: 'Submit',
                        btnClass: 'btn-blue',
                        action: function () {

                            var name = this.$content.find('.Title').val();
                            var description = this.$content.find('.DescriptionNotes').val();
                            var data = this.$content.find('.DateNotes').val();
                            var category = $('#category').val();

                            if (!name) {
                                $.alert('nome non inserito');
                                return false;
                            } else if (!description) {
                                $.alert('descrizione non inserita');
                                return false;
                            } else if (!data) {
                                $.alert('data non inserita');
                                return false;
                            } else if (!category) {
                                $.alert('categoria non inserita');
                                return false;
                            }
                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("newNotes", "Notes")?title=' + name + '&DescriptionNotes=' + description + '&DateNotes=' + data + '&CategoryNotes=' + category,
                                success: function (response) {

                                    $.alert('Nota aggiunta');

                                }
                            })


                        }
                    },
                    cancel: function () {

                    },
                }
            });

        });



</script>
